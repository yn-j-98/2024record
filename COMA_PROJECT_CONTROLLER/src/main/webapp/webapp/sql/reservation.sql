CREATE TABLE RESERVATION(
	RESERVATION_NUM INT PRIMARY KEY,						--예약 번호
	RESERVATION_DATE DATE NOT NULL,		--예약 날짜
	RESERVATION_GYM_NUM INT NOT NULL,					--예약한 암벽장 FK
	RESERVATION_MEMBER_ID VARCHAR(100) NOT NULL,		--예약한 사용자 FK
	RESERVATION_PRICE INT NOT NULL,						--예약한 사용자가 실제 결제한 금액
	
	--외래키 제약조건
	--암벽장
	CONSTRAINT FK_RESERVATION_GYM_NUM
	FOREIGN KEY (RESERVATION_GYM_NUM)
	REFERENCES GYM(GYM_NUM)
	ON DELETE CASCADE,
	
	--사용자
	CONSTRAINT FK_RESERVATION_MEMBER_ID
	FOREIGN KEY (RESERVATION_MEMBER_ID)
	REFERENCES MEMBER(MEMBER_ID)
);

--예약 등록 RESERVATION_GYM_NUM, RESERVATION_DATE, RESERVATION_MEMBER_ID, RESERVATION_PRICE
INSERT INTO RESERVATION(RESERVATION_NUM,RESERVATION_GYM_NUM,RESERVATION_DATE,RESERVATION_MEMBER_ID,RESERVATION_PRICE)
VALUES ((SELECT NVL(MAX(RESERVATION_NUM),0)+1 FROM RESERVATION),?,?,?,?)

--PK로 예약 정보 찾기 RESERVATION_NUM
SELECT
	RESERVATION_NUM,
	RESERVATION_DATE,
	RESERVATION_GYM_NUM,
	RESERVATION_MEMBER_ID,
	RESERVATION_PRICE
FROM
	RESERVATION
WHERE
	RESERVATION_NUM = ?
	
--해당 암벽장 예약 가능 개수 RESERVATION_GYM_NUM
SELECT G.GYM_RESERVATION_CNT AS RESERVATION_TOTAL 
FROM 
	RESERVATION R
JOIN
	GYM G
ON
	R.RESERVATION_GYM_NUM = G.GYM_NUM
WHERE
	RESERVATION_GYM_NUM = ?

--예약 취소 RESERVATION_NUM
DELETE FROM RESERVATION WHERE RESERVATION_NUM = ?

--사용자 아이디로 예약한 내역 전부 출력 RESERVATION_MEMBER_ID
SELECT
	R.RESERVATION_NUM,
	R.RESERVATION_DATE,
	R.RESERVATION_GYM_NUM,
	R.RESERVATION_MEMBER_ID,
	R.RESERVATION_PRICE
FROM
	RESERVATION R
JOIN
	MEMBER M
ON 
	R.RESERVATION_MEMBER_ID = M.MEMBER_ID
WHERE
	R.RESERVATION_MEMBER_ID = ?